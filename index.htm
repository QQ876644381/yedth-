<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Loading...</title>  <!-- 设置初始标题 -->
  <style>
    body {
      font-family: system-ui, -apple-system, Segoe UI, Roboto, Ubuntu, 'Helvetica Neue', Arial, 'Noto Sans', 'PingFang SC', 'Microsoft YaHei', sans-serif;
      display: flex;
      align-items: center;
      justify-content: center;
      min-height: 100vh;
      background: #0f172a;
      margin: 0;
    }
    .container {
      max-width: 100%;  /* 全屏显示 */
      width: 100%;
      height: 100vh;  /* 占满整个屏幕 */
      padding: 0;
      display: flex;
      justify-content: center;
      align-items: center;
    }
    .spinner {
      border: 8px solid #f3f3f3;
      border-top: 8px solid #3498db;
      border-radius: 50%;
      width: 40px;
      height: 40px;
      animation: spin 2s linear infinite;
    }
    @keyframes spin {
      0% { transform: rotate(0deg); }
      100% { transform: rotate(360deg); }
    }
  </style>
</head>
<body>

  <div class="container">
    <div class="spinner"></div>
  </div>

  <script>
    // 获取链接参数 c
    function getC() {
      try {
        return new URL(location.href).searchParams.get('c');
      } catch (e) {
        return null;
      }
    }

    // 解码并加载目标页面
    function loadTargetPage() {
      const c = getC();
      if (c) {
        try {
          const targetUrl = atob(c);  // 解码 Base64 URL 参数
          if (/^https?:\/\//i.test(targetUrl)) {
            // 获取目标页面的标题
            fetch(targetUrl)
              .then(response => response.text())
              .then(html => {
                const doc = new DOMParser().parseFromString(html, 'text/html');
                const pageTitle = doc.querySelector('title').textContent || "Loaded Page";  // 获取目标页面标题

                // 修改浏览器标签页的标题
                document.title = pageTitle;

                // 跳转到目标页面
                window.location.replace(targetUrl); // 直接跳转，不更改地址栏
              })
              .catch(err => {
                console.error("Error fetching the target page:", err);
                document.querySelector('.spinner').textContent = "Failed to load target page";
              });
          } else {
            document.querySelector('.spinner').textContent = "Invalid link";
          }
        } catch (e) {
          document.querySelector('.spinner').textContent = "Failed to load. Please try again.";
        }
      } else {
        document.querySelector('.spinner').textContent = "No target link found.";
      }
    }

    // 页面加载时调用
    window.onload = loadTargetPage;
  </script>

</body>
</html>
